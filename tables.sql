-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.covid_fact_table
(
    neighbourhood_pk integer NOT NULL,
    year integer NOT NULL,
    month integer NOT NULL,
    num_cases integer,
    CONSTRAINT covid_fact_table_pkey PRIMARY KEY (year, month, neighbourhood_pk)
);

CREATE TABLE IF NOT EXISTS public.crime_fact_table
(
    premise_pk integer NOT NULL,
    incident_pk integer NOT NULL,
    location_pk integer NOT NULL,
    occurence_pk integer NOT NULL,
    reported_pk integer NOT NULL,
    neighbourhood_pk integer NOT NULL,
    CONSTRAINT crime_fact_table_pkey PRIMARY KEY (premise_pk, incident_pk, location_pk, occurence_pk, reported_pk, neighbourhood_pk)
);

CREATE TABLE IF NOT EXISTS public.incident
(
    incident_pk integer NOT NULL,
    mci_category text COLLATE pg_catalog."default",
    offence text COLLATE pg_catalog."default",
    ucr_code integer,
    ucr_ext integer,
    CONSTRAINT "Incident_pkey" PRIMARY KEY (incident_pk)
);

CREATE TABLE IF NOT EXISTS public.location
(
    location_pk integer NOT NULL,
    division text COLLATE pg_catalog."default",
    longitude numeric,
    latitude numeric,
    CONSTRAINT "Location_pkey" PRIMARY KEY (location_pk)
);

CREATE TABLE IF NOT EXISTS public.neighbourhood
(
    neighbourhood_pk integer NOT NULL,
    neighbourhood text COLLATE pg_catalog."default",
    shape_area numeric,
    shape_length numeric,
    CONSTRAINT "Neighbourhood_pkey" PRIMARY KEY (neighbourhood_pk)
);

CREATE TABLE IF NOT EXISTS public.occurance_date
(
    occurence_pk integer NOT NULL,
    occurrencedate date,
    occurrencehour integer,
    occurrenceday integer,
    occurrencemonth integer,
    occurrenceyear integer,
    CONSTRAINT "OccuranceDate_pkey" PRIMARY KEY (occurence_pk)
);

CREATE TABLE IF NOT EXISTS public.premise
(
    premise_pk integer NOT NULL,
    location_type text COLLATE pg_catalog."default",
    premises_type text COLLATE pg_catalog."default",
    CONSTRAINT "Premise_pkey" PRIMARY KEY (premise_pk)
);

CREATE TABLE IF NOT EXISTS public.reported_date
(
    reported_pk integer NOT NULL,
    reporteddate date,
    reportedhour integer,
    reportedday integer,
    reportedmonth integer,
    reportedyear integer,
    CONSTRAINT "ReportedDate_pkey" PRIMARY KEY (reported_pk)
);

ALTER TABLE IF EXISTS public.covid_fact_table
    ADD CONSTRAINT fk FOREIGN KEY (neighbourhood_pk)
    REFERENCES public.neighbourhood (neighbourhood_pk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.crime_fact_table
    ADD CONSTRAINT incident FOREIGN KEY (incident_pk)
    REFERENCES public.incident (incident_pk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.crime_fact_table
    ADD CONSTRAINT location FOREIGN KEY (location_pk)
    REFERENCES public.location (location_pk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.crime_fact_table
    ADD CONSTRAINT neighbourhood FOREIGN KEY (neighbourhood_pk)
    REFERENCES public.neighbourhood (neighbourhood_pk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.crime_fact_table
    ADD CONSTRAINT occurance FOREIGN KEY (occurence_pk)
    REFERENCES public.occurance_date (occurence_pk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.crime_fact_table
    ADD CONSTRAINT premise FOREIGN KEY (premise_pk)
    REFERENCES public.premise (premise_pk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.crime_fact_table
    ADD CONSTRAINT reported FOREIGN KEY (reported_pk)
    REFERENCES public.reported_date (reported_pk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;